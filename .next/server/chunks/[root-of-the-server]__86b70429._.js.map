{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 66, "column": 0}, "map": {"version":3,"sources":["file:///Users/tajimi/workspace/arxiv_reader/src/app/api/evaluate/route.ts"],"sourcesContent":["import { NextRequest, NextResponse } from 'next/server';\nimport { ArxivPaperEvaluator } from '@/lib/paperEvaluator';\nimport { DateEvaluationResponse } from '@/lib/types';\n\nexport async function GET() {\n  return NextResponse.json({\n    message: 'Arxiv Papers Evaluation by Date API',\n    usage: 'POST with { \"date\": \"YYYY-MM-DD\" }',\n    description: 'Evaluates papers from cs.AI, cs.CV, cs.LG categories for the specified date'\n  });\n}\n\nexport async function POST(request: NextRequest) {\n  try {\n    const body = await request.json();\n    const { date } = body;\n\n    if (!date) {\n      return NextResponse.json({\n        success: false,\n        error: 'date is required (format: YYYY-MM-DD)'\n      } as DateEvaluationResponse, { status: 400 });\n    }\n\n    // 日付形式の検証\n    const dateRegex = /^\\d{4}-\\d{2}-\\d{2}$/;\n    if (!dateRegex.test(date)) {\n      return NextResponse.json({\n        success: false,\n        error: 'Invalid date format. Use YYYY-MM-DD'\n      } as DateEvaluationResponse, { status: 400 });\n    }\n\n    const evaluator = new ArxivPaperEvaluator();\n    const results = await evaluator.evaluatePapersByDate(date);\n\n    return NextResponse.json({\n      success: true,\n      date,\n      totalPapers: results.length,\n      results: results.map(result => ({\n        paper: result.paper,\n        evaluation: result.evaluation,\n        formattedOutput: result.formattedOutput\n      }))\n    } as DateEvaluationResponse);\n\n  } catch (error) {\n    console.error('Error evaluating papers by date:', error);\n    return NextResponse.json({\n      success: false,\n      date: '',\n      totalPapers: 0,\n      error: error instanceof Error ? error.message : 'Unknown error occurred'\n    } as DateEvaluationResponse, { status: 500 });\n  }\n}\n\n"],"names":[],"mappings":";;;;AAAA;;;;;;;;AAIO,eAAe;IACpB,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;QACvB,SAAS;QACT,OAAO;QACP,aAAa;IACf;AACF;AAEO,eAAe,KAAK,OAAoB;IAC7C,IAAI;QACF,MAAM,OAAO,MAAM,QAAQ,IAAI;QAC/B,MAAM,EAAE,IAAI,EAAE,GAAG;QAEjB,IAAI,CAAC,MAAM;YACT,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;gBACvB,SAAS;gBACT,OAAO;YACT,GAA6B;gBAAE,QAAQ;YAAI;QAC7C;QAEA,UAAU;QACV,MAAM,YAAY;QAClB,IAAI,CAAC,UAAU,IAAI,CAAC,OAAO;YACzB,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;gBACvB,SAAS;gBACT,OAAO;YACT,GAA6B;gBAAE,QAAQ;YAAI;QAC7C;QAEA,MAAM,YAAY,IAAI;QACtB,MAAM,UAAU,MAAM,UAAU,oBAAoB,CAAC;QAErD,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YACvB,SAAS;YACT;YACA,aAAa,QAAQ,MAAM;YAC3B,SAAS,QAAQ,GAAG,CAAC,CAAA,SAAU,CAAC;oBAC9B,OAAO,OAAO,KAAK;oBACnB,YAAY,OAAO,UAAU;oBAC7B,iBAAiB,OAAO,eAAe;gBACzC,CAAC;QACH;IAEF,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,oCAAoC;QAClD,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YACvB,SAAS;YACT,MAAM;YACN,aAAa;YACb,OAAO,iBAAiB,QAAQ,MAAM,OAAO,GAAG;QAClD,GAA6B;YAAE,QAAQ;QAAI;IAC7C;AACF","debugId":null}}]
}